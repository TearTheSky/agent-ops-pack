- グローバル変数:
  - repo_root: /Users/foobar/repos
  - logging_config: "activity_log/activity_log_config.yaml"
  - environment_config: "environment/system_environment.yaml"

# やりたいオペレーション
- 概要:(例)terraformのモジュールのバージョンアップ
- 備考: spanner-kit v0.8.0バージョンアップでの学習内容を汎用化して反映
- 構造: モジュラー設計（メインタスク + サブタスク）で管理性と安全性を向上

# CONFIGカスタマイズガイド
# 1. グローバル変数を自分の環境に合わせて修正
# 2. 必要な環境変数を「環境変数の事前確認」に追加  
# 3. 「実行時の確認ポイント」に具体的な出力例を記載
# 4. 各ステップに対して activity_log 記録を追加
# 5. 複雑な作業は「メインタスク + サブタスク」に分割を推奨

- タスク: "メインタスク（例：モジュールのバージョンアップPRの作成）"
  - 対象の確認:
    - マイクロサービス名
    - 環境
    - モジュールの利用状況
    - モジュールのバージョン
  - 事前準備
    - lesson_learned_check: "類似作業の過去の学習内容を確認（philosophy/lesson_learned.yaml）"
    - 環境変数の事前確認
      - 必要な環境変数が設定されているか確認
      - 例: SLACK_BOT_TOKEN, API_KEY, GCP_PROJECT_ID など
      - 確認コマンド例: echo "TOKEN: ${TOKEN:0:10}..."
    - 事前連絡
      - Slackでの連絡
    - ツールの準備
      - ツールのダウンロード
      - 基本設定
      - 環境変数
    - 開始記録
  - バージョンアップ作業
    - pre_task_lesson_check: "作業開始前に関連する過去のトラブル事例を確認"
    - ツールによる更新
    - AIによるファイル修正
    - プルリクエストの作成
  - 実行時の確認ポイント
    - スクリプト/ツール開始時の表示確認
    - 主要な処理ステップでの進捗確認
    - 完了時の成功メッセージ確認
    - エラー発生時の明確な表示
  - レビュー依頼
    - Slackでの連絡
  - マージ後作業
    - CI成功確認
      - 失敗時
        - トラブルシューティング
        - リカバリ作業実施連絡
  - 記録更新作業
    - Slackでの連絡
    - AI保持管理記録の更新
    - lesson_learned_update: "今回の作業で新たに学んだことがあればlesson_learnedに追加"
    - activity_log記録: "本タスク完了後、activity_log/activity_log_config.yaml の内容に従ってログ追加"
    - チケットシステムへの投稿
    - その他

- サブタスク1: "レビュー依頼の投稿"
  - 作業: "作成されたPRのレビュー依頼をSlackに投稿"
  - 事前準備:
    - メインタスクで作成されたPR URLの確認
    - 投稿先チャンネルの特定
    - 環境変数の事前確認（必要に応じて）
  - 注意事項:
    - メッセージテンプレートの一貫性を保つ
  - 結果の記録:
    - 本サブタスク完了後、activity_log/activity_log_config.yaml の内容に従ってログ追加

- サブタスク2: "クリーンアップ作業"
  - 作業: "バージョンアップ後の不要なリソース・ファイルの削除"
  - 事前準備:
    - メインタスクの完了確認
    - 削除対象リソースの特定
    - バックアップの確認
  - 注意事項:
    - 削除前の安全確認を徹底
    - 依存関係の影響を考慮
  - 結果の記録:
    - 本サブタスク完了後、activity_log/activity_log_config.yaml の内容に従ってログ追加